{"version":3,"sources":["components/article-card.tsx","services/article-services.ts","components/article-search.tsx","pages/blog-list.tsx","pages/page-not-found.tsx","components/loader.tsx","services/commentaire-services.ts","pages/article-detail.tsx","services/authentication-services.ts","pages/login.tsx","PrivateRoute.tsx","pages/register.tsx","pages/article-add.tsx","pages/article-edit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ArticleCard","article","borderColor","useState","color","setColor","history","useHistory","className","onClick","id","setTimeout","push","onMouseEnter","onMouseLeave","style","src","imagePath","width","margin","alt","title","createdAt","isPublic","data-badge-caption","User","pseudo","text","Tags","map","tag","key","name","ArticleService","Promise","resolve","user","get","log","fetch","method","body","headers","token","then","response","json","catch","error","handleError","tags","avatar","FormData","form","append","i","length","JSON","stringify","this","getUser","postArticle","data","Error","upArticle","term","isEmpty","myheaders","Headers","send","Object","keys","console","ArticleSearch","setTerm","setArticle","type","placeholder","value","onChange","e","target","searchArticle","articles","handleInputChange","to","BlogList","useEffect","getArticles","PageNotFound","Loader","CommentaireService","ArticleDetail","match","params","setForm","handleSubmit","preventDefault","newForm","newField","isValid","validateForm","add","go","getArticle","err","avatarPath","Commentaires","com","delete","onSubmit","fieldName","fieldValue","AuthenticationService","password","postLog","isAuthenticated","set","email","postReg","Login","message","setMessage","login","htmlFor","PrivateRoute","Component","component","rest","render","props","pathname","Register","File","register","path","files","handleUploadChange","ArticleAdd","setType","arr","_","split","trimArr","trim","addArtcle","checked","checkPublic","ArticleEdit","tagsString","join","test","updateArtcle","goBack","App","setUser","remove","undefined","exact","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35ecb7a8.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { useHistory} from 'react-router-dom';\nimport Article from '../models/article';\nimport './article-card.css';\n\n\ntype Props = {\n    article: Article,\n    borderColor?: string\n}\n\nconst ArticleCard: FunctionComponent<Props> = ({ article, borderColor = '#009688' }) => {\n    const [color, setColor] = useState<string>();\n    const history = useHistory();\n\n    const showBorder = () => {\n        setColor(borderColor);\n    }\n    const hideBorder = () => {\n        setColor('#f5f5f5');\n    }\n\n    const goToArticle = (id: number) => {\n        setColor('#FF0000');\n        setTimeout(() => {\n            history.push(`/articles/${id}`);\n        }, 500);\n\n    }\n\n    return (\n        <div className=\"col s12 m12\" onClick={() => goToArticle(article.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n            <div className=\"card horizontal\" style={{ borderColor: color }}>\n                <div className=\"card-image\">\n                    <img src={'http://localhost:3000/' + article.imagePath} style={{width: '250px', margin: '0 auto'}} alt={article.title} />\n                </div>\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{article.title}</span>\n                    <span className=\"card-title\"><small>{article.createdAt} {article.isPublic ? (<span className=\"new badge  green darken-2\" data-badge-caption=\"article\">public</span>) : (<span className=\"new badge red darken-2\" data-badge-caption=\"article\">private</span>)}</small></span>\n                    <p><small>{article.User.pseudo}</small></p>\n                    <p >{article.text}</p>\n                    {article.Tags &&\n                        article.Tags.map(tag => (\n                            <span key={tag.name} className=\"chip\">{tag.name}</span>\n                        ))}\n\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default ArticleCard;","import Article from \"../models/article\";\nimport { LogedUserInface } from \"../services/authentication-services\";\nimport { get } from 'local-storage';\n\nexport default class ArticleService {\n\n    static getUser(): Promise<LogedUserInface| null> {\n        return new Promise((resolve) => {\n            const user: LogedUserInface = get('user');\n            if (!user)\n                resolve(null);\n            resolve(user);\n        })\n    }\n\n    static postArticle(log: FormData, user: any): Promise<LogedUserInface>{\n        return fetch(`http://localhost:3000/article`, {\n            method: 'POST',\n            body: log,\n            headers: {'x-access-token': user.token}\n        })\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n    static upArticle(log: FormData, user: any): Promise<LogedUserInface>{\n        return fetch(`http://localhost:3000/article`, {\n            method: 'PUT',\n            body: log,\n            headers: {'x-access-token': user.token}\n        })\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n\n    static async addArtcle(text:string, tags: Array<string>, title:string, avatar: File, isPublic: Boolean): Promise<any> {\n        try { \n            let form = await new FormData();\n            await form.append('text', text);\n            for (let i = 0; i< tags.length; i++) {\n                form.append('tag[]', tags[i]);\n            }\n            await form.append('isPublic', JSON.stringify(isPublic));\n            await form.append('title', title);\n            await form.append('avatarPath', avatar);\n\n            const user = await this.getUser();\n            const data = await this.postArticle(form, user);\n            if (data.Error != null){\n                this.handleError(data.Error);\n            } else {\n                return true;\n            }\n        } catch (err) {\n\n        }\n    }\n    static async updateArtcle(id: number,text:string, tags: Array<string>, title:string, avatar: File, isPublic: Boolean): Promise<any> {\n        try { \n            let form = await new FormData();\n            await form.append('id', JSON.stringify(id));\n            await form.append('text', text);\n            for (let i = 0; i< tags.length; i++) {\n                form.append('Tags[]', tags[i]);\n            }\n            await form.append('isPublic', JSON.stringify(isPublic));\n            await form.append('title', title);\n            await form.append('avatarPath', avatar);\n\n            const user = await this.getUser();\n            const data = await this.upArticle(form, user);\n            if (data.Error != null){\n                this.handleError(data.Error);\n            } else {\n                return true;\n            }\n        } catch (err) {\n\n        }\n    }\n\n    static async getArticles(): Promise<any> {\n        try {\n            const user = await this.getUser();\n            if (user) {\n            return fetch('http://localhost:3000/article', {\n                headers: {'x-access-token': user.token},\n            })\n                .then(response => response.json())\n                .catch(error => this.handleError(error));\n            } else {\n                return fetch('http://localhost:3000/articlepublic')\n                    .then(response => response.json())\n                    .catch(error => this.handleError(error));\n            }\n        } catch (err) {\n            return;\n        }\n    }\n    static searchArticle(term: string): Promise<Article[]> {\n        return fetch(`http://localhost:3000/articlesearch/${term}`)\n                .then(response => response.json())\n                .catch(error => this.handleError(error));\n    }\n\n    static async getArticle(id: number): Promise<any> {\n        try {\n        const user = await this.getUser();\n        if (user) {\n        return fetch(`http://localhost:3000/article/${id}`,\n        {\n            headers: {'x-access-token': user.token},\n        })\n            .then(response => response.json())\n            .then(data => this.isEmpty(data) ? null : data)\n            .catch(error => this.handleError(error));\n        }\n        } catch (err) {\n            return;\n        }\n    }\n    static async delete(id: number): Promise<any> {\n        try {\n             const user = await this.getUser();\n            if (user) {\n                const myheaders = new Headers();\n                const send = { id : id };\n                myheaders.append('Content-type', 'application/json');\n                myheaders.append('x-access-token', user.token)\n                const response = await fetch(`http://localhost:3000/article`,\n                   { method: 'DELETE',\n                   headers: myheaders,\n                   body: JSON.stringify(send)});\n                   const data = await response.json();\n            }\n        } catch (err) {\n            this.handleError(err);\n        }\n    }\n\n    static isEmpty(data: Object): boolean {\n        \n        return Object.keys(data).length === 0;\n    }\n\n    static handleError(error: any) {\n        console.error(error);\n        return false;\n    }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Article from '../models/article';\nimport ArticleService from '../services/article-services';\n \nconst ArticleSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [article, setArticle] = useState<Article[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setArticle([]);\n      return;\n    }\n \n    ArticleService.searchArticle(term).then(articles => setArticle(articles));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un Article\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {article.map((article) => (\n          <Link key={article.id} to={`/articles/${article.id}`} className=\"collection-item\">\n            {article.title}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default ArticleSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Article from '../models/article'\n\nimport { Link  } from 'react-router-dom';\nimport ArticleCard from '../components/article-card';\nimport ArticleService from '../services/article-services';\nimport ArticleSearch from '../components/article-search';\n\nconst BlogList: FunctionComponent = () => {\n    const [articles, setArticle] = useState<Article[]>([]);\n\n    useEffect(() => {\n        ArticleService.getArticles().then(articles => setArticle(articles));\n    }, []);\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                <ArticleSearch />\n                <h1> Article<Link to=\"/articles/add\" className=\"btn-floating btn-large waves-effect waves-light red\"><i className=\"material-icons\">add</i></Link> </h1>\n                \n                {articles ? (\n                    articles.map(article => (\n                    <ArticleCard key={article.id} article={article}/>\n                ))): (\n                    <h4>No Article</h4>\n                )}\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default BlogList;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import { get } from 'local-storage';\nimport { LogedUserInface } from \"../services/authentication-services\";\n\nexport default class CommentaireService {\n\n\n\n    static getUser(): Promise<LogedUserInface| null> {\n        return new Promise((resolve) => {\n            const user: LogedUserInface = get('user');\n            if (!user)\n                resolve(null);\n            resolve(user);\n        })\n    }\n\n    static async delete(id: number): Promise<any> {\n        try {\n\n             const user = await this.getUser();\n            if (user) {\n                const myheaders = new Headers();\n                const send = { id : id };\n                myheaders.append('Content-type', 'application/json');\n                myheaders.append('x-access-token', user.token)\n                const response = await fetch(`http://localhost:3000/commentaires`,\n                   { method: 'DELETE',\n                   headers: myheaders,\n                   body: JSON.stringify(send)});\n                   const data = await response.json();\n                   if (data.Error != null){\n                    console.log(data.Error[0])\n                } else {\n                   console.log(data);\n                } \n            }\n        } catch (err) {\n            console.log(err.Error[0]);\n            return;\n        }\n    }\n    static async add(id: number, text: string): Promise<any> {\n        try {\n             const user = await this.getUser();\n            if (user) {\n                const myheaders = new Headers();\n\n                const send = {\n                    id : id,\n                    text: text\n                };\n                myheaders.append('Content-type', 'application/json');\n                myheaders.append('x-access-token', user.token)\n                const response = await fetch(`http://localhost:3000/commentaires`,\n                   { method: 'POST',\n                   headers: myheaders,\n                   body: JSON.stringify(send)});\n                   const data = await response.json();\n                   if (data.Error != null){\n                    console.log(data.Error[0])\n                } else {\n                   console.log(data);\n                } \n            }\n        } catch (err) {\n            console.log(err.Error[0]);\n            return;\n        }\n    }\n    static handleError(error: any): void {\n        console.log(`Handle`);\n        console.error(error);\n    }\n}","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link, useHistory } from 'react-router-dom';\nimport Article from \"../models/article\";\nimport ArticleService from \"../services/article-services\";\nimport Loader from \"../components/loader\";\nimport CommentaireService from \"../services/commentaire-services\";\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean,\n    path?: any\n};\n\ntype FormData = {\n    id: Field,\n    text: Field,\n}\ntype Params = { id: string };\n\nconst ArticleDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n\n    const [article, setArticle] = useState<Article | null>(null);\n    const history = useHistory();\n\n    const [form, setForm] = useState<FormData>({\n        id: { value: +match.params.id },\n        text: { value: '' }\n    });\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const fieldName: string = e.target.name;\n        const fieldValue: string = e.target.value;\n        const newField: Field = { [fieldName]: { value: fieldValue } };\n\n        setForm({ ...form, ...newField });\n    }\n\n    const validateForm = () => {\n        let newForm: FormData = form;\n        if (form.text.value.length < 3) {\n            const errorMsg: string = 'Votre Message doit faire au moins 3 caractères de long.';\n            const newField: Field = { value: form.text.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ text: newField } };\n        } else if (form.text.value.length > 255) {\n\n            const errorMsg: string = 'Votre prénom doit faire moins de 255 caractères de long.';\n            const newField: Field = { value: form.text.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ text: newField } };\n        } else {\n            const newField: Field = { value: form.text.value, error: '', isValid: true };\n            newForm = { ...newForm, ...{ text: newField } };\n        }\n        setForm(newForm);\n        return newForm.text.isValid;\n    }\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const isFormValid = validateForm();\n        if (isFormValid) {\n            CommentaireService.add(+match.params.id, form.text.value);\n            history.go(0);\n        }\n    }\n    const deleteArticle = (id: number) => {\n        ArticleService.delete(id); \n        history.push('/blog');\n        history.go(0);\n    }\n\n    useEffect(() => {\n        ArticleService.getArticle(+match.params.id).then(article => setArticle(article)).catch((err) =>{\n            history.push('/pageNotF');\n        });\n    }, [match.params.id]);\n\n    const deleteCom = (id: number) => {\n        CommentaireService.delete(id);\n        history.go(0);\n    }\n\n\n    return (\n        <div>\n            {article ? (\n                <div className=\"row\">\n                    <div className=\"col s12 m8 offset-m2\">\n                        <h2 className=\"header center\">{article.title}</h2>\n                        <div className=\"card hoverable\">\n                            <div className=\"card-image\">\n                                <img src={'http://localhost:3000/' + article.imagePath} alt={article.title} style={{ width: '250px', margin: '0 auto' }} />\n                                <Link to={`/articles/edit/${article.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                                    <i className=\"material-icons\">edit</i>\n                                </Link>\n                            </div>\n                            <div className=\"card-stacked\">\n                                <div className=\"card-content\">\n                                    <table className=\"bordered striped\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Author</td>\n                                                <td><div className=\"chip\">\n                                                    <img className=\"imgAvatar\" alt=\"avatar\" src={'http://localhost:3000/' + article.User.avatarPath} />\n                                                    {article.User.pseudo}\n                                                </div></td>\n                                            </tr>\n                                            <tr>\n                                                <td>Date</td>\n                                                <td><strong>{article.createdAt}</strong></td>\n                                            </tr>\n                                            <tr>\n                                                <td>Text</td>\n                                                <td><strong>{article.text}</strong></td>\n                                            </tr>\n                                            <tr>\n                                                <td>Tags</td>\n                                                <td>\n                                                    {article.Tags.map(tag => (\n                                                        <span key={tag.name} className=\"chip\">{tag.name}</span>\n                                                    ))}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Visible ?</td>\n                                                <td>{article.isPublic ? (<span className=\"new badge  green darken-2\" data-badge-caption=\"article\">public</span>) : (<span className=\"new badge red darken-2\" data-badge-caption=\"article\">private</span>)}</td>\n                                            </tr>\n                                            {article.Commentaires.map(com => (\n                                                <tr>\n                                                    <td><div className=\"chip\">\n                                                        <img key={com.avatarPath} className=\"imgAvatar\" alt=\"avatar\" src={'http://localhost:3000/' + com.avatarPath} />\n                                                        {com.pseudo}\n                                                    </div></td>\n                                                    <td>{com.text}</td>\n                                                    <td><a className=\"waves-effect waves-light btn\" onClick={() => deleteCom(com.id)}><i className=\"material-icons \">delete</i></a></td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                    <div className=\"row\">\n                                        <form onSubmit={(e) => handleSubmit(e)} className=\"col s12\">\n                                            <div className=\"row\">\n                                                <div className=\"input-field col s12\">\n                                                    <input type=\"text\" id=\"text\" name=\"text\" value={form.text.value} onChange={e => handleInputChange(e)}  className=\"materialize-textarea form-control\"></input>\n                                                    <label className=\"textarea1\">Commentaire</label>\n                                                </div>\n                                                <button type=\"submit\" className=\"btn\">Valider</button>\n                                            </div>\n                                            {form.text.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.text.error}\n                                        </div>}\n                                        </form>\n                                    </div>\n                                </div>\n                                <div className=\"card-action\">\n                                    <Link to=\"/\">Retour</Link>\n                                </div>\n                                <div className=\"card-action\">\n                                <a className=\"waves-effect waves-light red btn\" onClick={() => deleteArticle(+match.params.id)}><i className=\"material-icons right\">delete</i>Supprimer l'article</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                    <h4 className=\"center\"><Loader /></h4>\n                )}\n        </div>\n    );\n}\nexport default ArticleDetail;","import { set } from 'local-storage';\n\n\nexport default class AuthenticationService {\n    static isAuthenticated: boolean = false;\n    static postLog(log: logInterface): Promise<LogedUserInface> {\n        return fetch(`http://localhost:3000/login`, {\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(response => response.json())\n            .catch(error => this.handleError(error));\n    }\n    static postReg(log: FormData): Promise<LogedUserInface> {\n        return fetch(`http://localhost:3000/user`, {\n            method: 'POST',\n            body: log,\n        })\n            .then(response => response.json())\n            .catch(error => this.handleError(error));\n    }\n    static async login(pseudo: string, password: string): Promise<boolean> {\n        try {\n            const log: logInterface = { pseudo: pseudo, password: password };\n            const data = await this.postLog(log)\n            if (data.Error != null) {\n                return this.isAuthenticated\n            } else {\n                set('user', data);\n                return this.isAuthenticated = true;\n            }\n        } catch (err) {\n            return false;\n        }\n    }\n    static async register(pseudo: string, password: string, email: string, avatarPath: File): Promise<boolean> {\n        try {\n            let form = await new FormData();\n            await form.append('pseudo', pseudo);\n            await form.append('password', password);\n            await form.append('email', email);\n            await form.append('avatarPath', avatarPath);\n\n            const data = await this.postReg(form)\n            if (data.Error != null) {\n                return this.isAuthenticated\n            } else {\n                set('user', data);\n                return this.isAuthenticated = true;\n            }\n        } catch (err) {\n            return false;\n        }\n    }\n    static handleError(error: any): void {\n        console.error(error);\n    }\n\n}\nexport interface logInterface {\n    pseudo: string;\n    password: string;\n}\nexport interface LogedUserInface {\n    pseudo: string;\n    email: string;\n    avatarPath: string;\n    token: string;\n    Error?: Array<string>;\n}","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-services';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  pseudo: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    pseudo: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Veuillez vous identifier !');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.pseudo.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.pseudo.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{pseudo: newField } };\n    } else {\n      const newField: Field = { value: form.pseudo.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ pseudo: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 3) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.pseudo.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.pseudo.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        history.push('/');\n        history.go(0);\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"pseudo\">Identifiant</label>\n                  <input id=\"pseudo\" type=\"text\" name=\"pseudo\" className=\"form-control\" value={form.pseudo.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.pseudo.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.pseudo.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n                <Link to=\"/register\" className=\"btn  indigo accent-1\">Register</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\n import { Route, Redirect } from 'react-router-dom';\n import AuthenticationService from './services/authentication-services';\n import { get } from \"local-storage\";\n  \nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const user = get('user') || '';\n    if (user) \n      AuthenticationService.isAuthenticated = true;\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n  \n    return <Component {...props} />\n  }} />\n);\n  \nexport default PrivateRoute; ","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-services';\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean,\n    path?: any\n};\n\ntype FormData = {\n    pseudo: Field,\n    password: Field,\n    email: Field,\n    avatar: Field\n}\n\nconst Register: FunctionComponent = () => {\n\n    const history = useHistory();\n\n    const [form, setForm] = useState<FormData>({\n        pseudo: { value: '' },\n        password: { value: '' },\n        email: { value: '' },\n        avatar: {value : File}\n    });\n\n    const [message, setMessage] = useState<string>('Inscription !');\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const fieldName: string = e.target.name;\n        const fieldValue: string = e.target.value;\n        const newField: Field = { [fieldName]: { value: fieldValue } };\n\n        setForm({ ...form, ...newField });\n    }\n    const handleUploadChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const fieldName: string = 'avatar';\n        if (e.target.files) {\n        const fieldValue: any = e.target.files[0];\n        \n        const newField: Field = { [fieldName]: { value: fieldValue } };\n        setForm({ ...form, ...newField });\n        }\n    }\n\n    const validateForm = () => {\n        let newForm: FormData = form;\n\n        // Validator username\n        if (form.pseudo.value.length < 3) {\n            const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n            const newField: Field = { value: form.pseudo.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ pseudo: newField } };\n        } else {\n            const newField: Field = { value: form.pseudo.value, error: '', isValid: true };\n            newForm = { ...newForm, ...{ pseudo: newField } };\n        }\n        //validator email\n        if (form.email.value.length < 3) {\n            const errorMsg: string = 'Votre email doit faire au moins 3 caractères de long.';\n            const newField: Field = { value: form.email.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ email: newField } };\n        } else {\n            const newField: Field = { value: form.email.value, error: '', isValid: true };\n            newForm = { ...newForm, ...{ email: newField } };\n        }\n\n        // Validator password\n        if (form.password.value.length < 3) {\n            const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n            const newField: Field = { value: form.password.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ password: newField } };\n        } else {\n            const newField: Field = { value: form.password.value, error: '', isValid: true };\n            newForm = { ...newForm, ...{ password: newField } };\n        }\n\n\n        setForm(newForm);\n        return newForm.pseudo.isValid && newForm.password.isValid && newForm.email.isValid;\n    }\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const isFormValid = validateForm();\n        if (isFormValid) {\n            setMessage('👉 Tentative d enregistrement');\n             AuthenticationService.register(form.pseudo.value, form.password.value, form.email.value, form.avatar.value).then(isAuthenticated => {\n                if (!isAuthenticated) {\n                    setMessage('🔐 Bad Input.');\n                    return;\n                }\n                history.push('/');\n                history.go(0);\n\n            }); \n        }\n    }\n\n    return (\n        <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"row\">\n                <div className=\"col s12 m8 offset-m2\">\n                    <div className=\"card hoverable\">\n                        <div className=\"card-stacked\">\n                            <div className=\"card-content\">\n                                {/* Form message */}\n                                {message && <div className=\"form-group\">\n                                    <div className=\"card-panel grey lighten-5\">\n                                        {message}\n                                    </div>\n                                </div>}\n                                {/* Field email */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">Email</label>\n                                    <input id=\"email\" type=\"text\" name=\"email\" className=\"form-control\" value={form.email.value} onChange={e => handleInputChange(e)}></input>\n                                    {/* error */}\n                                    {form.email.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.email.error}\n                                        </div>}\n                                </div>\n                                {/* Field username */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"pseudo\">Pseudo</label>\n                                    <input id=\"pseudo\" type=\"text\" name=\"pseudo\" className=\"form-control\" value={form.pseudo.value} onChange={e => handleInputChange(e)}></input>\n                                    {/* error */}\n                                    {form.pseudo.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.pseudo.error}\n                                        </div>}\n                                </div>\n                                {/* Field password */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">Mot de passe</label>\n                                    <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                                    {/* error */}\n                                    {form.password.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.password.error}\n                                        </div>}\n                                </div>\n                                {/* Field avatar */}\n                                <div className=\"form-group\">\n                                    <div className=\"file-field input-field\">\n                                    <div className=\"btn\">\n                                        <span>Avatar</span>\n                                        <input type=\"file\" value={form.avatar.path} onChange={e => handleUploadChange(e)} />\n                                        </div>\n                                    \n                                    <div className=\"file-path-wrapper\">\n                                    <input id=\"avatar\"   type=\"text\" name=\"avatar\"  className=\"form-control file-path validate\" ></input>\n                                    </div>\n                                    </div>\n                                    {/* error */}\n                                    {form.avatar.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.avatar.error}\n                                        </div>}\n                                </div>\n                            </div>\n                            <div className=\"card-action center\">\n                                {/* Submit button */}\n                                <button type=\"submit\" className=\"btn\">Valider</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default Register;","import React, { FunctionComponent, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash';\nimport ArticleService from '../services/article-services';\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean,\n    path?: any\n};\n\ntype FormData = {\n    text: Field,\n    tags: Field,\n    title: Field,\n    avatar: Field,\n    isPublic: Field\n}\n\n\nconst ArticleAdd: FunctionComponent = () => {\n\n    const history = useHistory();\n    const [type, setType] = useState<boolean>(true);\n    const [form, setForm] = useState<FormData>({\n        text: { value: '' },\n        tags: { value: '' },\n        title: { value: '' },\n        avatar: { value: File },\n        isPublic: { value: type }\n    });\n\n    const [message, setMessage] = useState<string>('Add Article');\n\n\n\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const fieldName: string = e.target.name;\n        const fieldValue: string = e.target.value;\n        const newField: Field = { [fieldName]: { value: fieldValue } };\n\n        setForm({ ...form, ...newField });\n    }\n    const handleUploadChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const fieldName: string = 'avatar';\n        if (e.target.files) {\n            const fieldValue: any = e.target.files[0];\n\n            const newField: Field = { [fieldName]: { value: fieldValue } };\n            setForm({ ...form, ...newField });\n        }\n    }\n    const checkPublic = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const checked = e.target.checked;\n        let newField: Field;\n        if (checked) {\n            newField = { value: true };\n            setType(true);\n        } else {\n            setType(false);\n            newField = { value: false };\n        }\n        setForm({ ...form, ...{ isPublic: newField } });\n    }\n\n    const validateForm = () => {\n        let newForm: FormData = form;\n\n        // Validator text\n        if (form.text.value.length < 3) {\n            const errorMsg: string = 'Votre text doit faire au moins 3 caractères de long.';\n            const newField: Field = { value: form.text.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ text: newField } };\n        } else {\n            const newField: Field = { value: form.text.value, error: '', isValid: true };\n            newForm = { ...newForm, ...{ text: newField } };\n        }\n        //validator title\n        if (form.title.value.length < 3) {\n            const errorMsg: string = 'Votre title doit faire au moins 3 caractères de long.';\n            const newField: Field = { value: form.title.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ title: newField } };\n        } else {\n            const newField: Field = { value: form.title.value, error: '', isValid: true };\n            newForm = { ...newForm, ...{ title: newField } };\n        }\n\n\n\n        const newField: Field = { value : form.tags.value, error: '', isValid: true };\n        newForm = { ...newForm, ...{ tags: newField, } };\n\n\n        setForm(newForm);\n        return newForm.text.isValid && newForm.tags.isValid && newForm.title.isValid;\n    }\n\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const isFormValid = validateForm();\n        if (isFormValid) {\n            const arr = _.split(form.tags.value, ',');\n            let trimArr = _.map(arr, _.trim);\n             ArticleService.addArtcle(form.text.value, trimArr, form.title.value, form.avatar.value, form.isPublic.value)\n            .then(data => {\n                if (data) {\n                    setMessage('Article ajouté');\n                    history.push('/');\n                    history.go(0);\n                } else {\n                    setMessage('something go wrong');\n                }\n            })  \n        }\n    }\n\n    return (\n\n        <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"row\">\n                <div className=\"col s12 m8 offset-m2\">\n                    <div className=\"card hoverable\">\n                        <div className=\"card-stacked\">\n                            <div className=\"card-content\">\n                                {/* Form message */}\n                                {message && <div className=\"form-group\">\n                                    <div className=\"card-panel grey lighten-5\">\n                                        {message}\n                                    </div>\n                                </div>}\n                                {/* Field title */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"title\">Title</label>\n                                    <input id=\"title\" type=\"text\" name=\"title\" className=\"form-control\" value={form.title.value} onChange={e => handleInputChange(e)}></input>\n                                    {/* error */}\n                                    {form.title.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.title.error}\n                                        </div>}\n                                </div>\n                                {/* Field text */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"text\">text</label>\n                                    <input id=\"text\" type=\"text\" name=\"text\" className=\"form-control\" value={form.text.value} onChange={e => handleInputChange(e)}></input>\n                                    {/* error */}\n                                    {form.text.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.text.error}\n                                        </div>}\n                                </div>\n                                {/* Field Tags*/}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"tags\">Tags <strong>(separate by ' , ')</strong></label>\n                                    <input id=\"tags\" placeholder=\"Exemple,2,3tags\" type=\"text\" name=\"tags\" className=\"form-control\" value={form.tags.value} onChange={e => handleInputChange(e)}></input>\n                                    {/* error */}\n                                    {form.tags.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.tags.error}\n                                        </div>}\n                                </div>\n                                {/* Field isPublic*/}\n                                <div className=\"form-group\">\n                                    <label>\n                                        <input checked={type} onChange={e => checkPublic(e)} type=\"checkbox\"/>\n                                        <span>Is Public</span>\n                                    </label>\n                                </div>\n                            {/* Field avatar */}\n                            <div className=\"form-group\">\n                                <div className=\"file-field input-field\">\n                                    <div className=\"btn\">\n                                        <span>picture</span>\n                                        <input type=\"file\"  value={form.avatar.path} onChange={e => handleUploadChange(e)} />\n                                    </div>\n\n                                    <div className=\"file-path-wrapper\">\n                                        <input id=\"avatar\" type=\"text\" name=\"avatar\" className=\"form-control file-path validate\" ></input>\n                                    </div>\n                                </div>\n                                {/* error */}\n                                {form.avatar.error &&\n                                    <div className=\"card-panel red accent-1\">\n                                        {form.avatar.error}\n                                    </div>}\n                            </div>\n                        </div>\n                        <div className=\"card-action center\">\n                            {/* Submit button */}\n                            <button type=\"submit\" className=\"btn\">Valider</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </form >\n    );\n};\n\nexport default ArticleAdd;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { useHistory, RouteComponentProps, } from 'react-router-dom';\nimport Article from \"../models/article\";\nimport _ from 'lodash';\nimport ArticleService from '../services/article-services';\n\n\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean,\n    path?: any\n};\n\ntype FormData = {\n    id: Field\n    text: Field,\n    tags: Field,\n    title: Field,\n    avatar: Field,\n    isPublic: Field\n}\n\ntype Params = { id: string };\n\nconst ArticleEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n\n\n    const [article, setArticle] = useState<Article | null>(null);\n    const [type, setType] = useState<boolean>(true);\n\n    const [form, setForm] = useState<FormData>({\n        id: {value: ''},\n        text: { value: '' },\n        tags: { value: '' },\n        title: { value: '' },\n        avatar: { value: File },\n        isPublic: { value: type }\n    });\n\n    useEffect(() => {\n        ArticleService.getArticle(+match.params.id).then(article => {\n            let name = _.map(article.Tags, 'name');\n            let tagsString = _.join(name, ',')\n            let test: FormData = {\n                id: {value: article.id, isValid: true},\n                text: { value: article.text, isValid: true },\n                tags: { value: tagsString, isValid: true },\n                title: { value: article.title, isValid: true },\n                avatar: { value: article.imagePath, isValid: true },\n                isPublic: { value: article.isPublic, isValid: true }\n            }\n            setForm(test);\n            setType(article.isPublic);\n            setArticle(article);\n        })\n    }, [match.params.id]);\n    const history = useHistory();\n\n\n\n    const [message, setMessage] = useState<string>('UPDATE ARTICLE');\n\n\n\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const fieldName: string = e.target.name;\n        const fieldValue: string = e.target.value;\n        const newField: Field = { [fieldName]: { value: fieldValue } };\n\n        setForm({ ...form, ...newField });\n    }\n    const handleUploadChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const fieldName: string = 'avatar';\n        if (e.target.files) {\n            const fieldValue: any = e.target.files[0];\n\n            const newField: Field = { [fieldName]: { value: fieldValue } };\n            setForm({ ...form, ...newField });\n        }\n    }\n    const checkPublic = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const checked = e.target.checked;\n        let newField: Field;\n        if (checked) {\n            newField = { value: true };\n            setType(true);\n        } else {\n            setType(false);\n            newField = { value: false };\n        }\n        setForm({ ...form, ...{ isPublic: newField } });\n    }\n\n    const validateForm = () => {\n        let newForm: FormData = form;\n\n        // Validator text\n        if (form.text.value.length < 3) {\n            const errorMsg: string = 'Votre text doit faire au moins 3 caractères de long.';\n            const newField: Field = { value: form.text.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ text: newField } };\n        } else {\n            const newField: Field = { value: form.text.value, error: '', isValid: true };\n            newForm = { ...newForm, ...{ text: newField } };\n        }\n        //validator title\n        if (form.title.value.length < 3) {\n            const errorMsg: string = 'Votre title doit faire au moins 3 caractères de long.';\n            const newField: Field = { value: form.title.value, error: errorMsg, isValid: false };\n            newForm = { ...newForm, ...{ title: newField } };\n        } else {\n            const newField: Field = { value: form.title.value, error: '', isValid: true };\n            newForm = { ...newForm, ...{ title: newField } };\n        }\n\n\n\n        const newField: Field = { value: form.tags.value, error: '', isValid: true };\n        newForm = { ...newForm, ...{ tags: newField, } };\n\n\n        setForm(newForm);\n        return newForm.text.isValid && newForm.tags.isValid && newForm.title.isValid;\n    }\n\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const isFormValid = validateForm();\n        if (isFormValid && article) {\n            const arr = _.split(form.tags.value, ',');\n            let trimArr = _.map(arr, _.trim);\n            ArticleService.updateArtcle(form.id.value, form.text.value, trimArr, form.title.value, form.avatar.value, form.isPublic.value)\n                .then(data => {\n                    if (data) {\n                        setMessage('Article ajouté');\n                        history.push('/');\n                        history.goBack();\n                    } else {\n                        setMessage('something go wrong');\n                    }\n                }) \n        }\n    }\n\n    return (\n        <div>\n            {article ? (\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <div className=\"row\">\n                        <div className=\"col s12 m8 offset-m2\">\n                            <div className=\"card hoverable\">\n                                <div className=\"card-image\">\n                                    <img src={'http://localhost:3000/' + article.imagePath} alt={article.title} style={{ width: '250px', margin: '0 auto' }} />\n                                </div>\n                                <div className=\"card-stacked\">\n                                    <div className=\"card-content\">\n                                        {/* Form message */}\n                                        {message && <div className=\"form-group\">\n                                            <div className=\"card-panel grey lighten-5\">\n                                                {message}\n                                            </div>\n                                        </div>}\n                                        {/* Field title */}\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"title\">Title</label>\n                                            <input id=\"title\" type=\"text\" name=\"title\" className=\"form-control\" value={form.title.value} onChange={e => handleInputChange(e)}></input>\n                                            {/* error */}\n                                            {form.title.error &&\n                                                <div className=\"card-panel red accent-1\">\n                                                    {form.title.error}\n                                                </div>}\n                                        </div>\n                                        {/* Field text */}\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"text\">text</label>\n                                            <input id=\"text\" type=\"text\" name=\"text\" className=\"form-control\" value={form.text.value} onChange={e => handleInputChange(e)}></input>\n                                            {/* error */}\n                                            {form.text.error &&\n                                                <div className=\"card-panel red accent-1\">\n                                                    {form.text.error}\n                                                </div>}\n                                        </div>\n                                        {/* Field Tags*/}\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"tags\">Tags <strong>(separate by ' , ')</strong></label>\n                                            <input id=\"tags\" placeholder=\"Exemple,2,3tags\" type=\"text\" name=\"tags\" className=\"form-control\" value={form.tags.value} onChange={e => handleInputChange(e)}></input>\n                                            {/* error */}\n                                            {form.tags.error &&\n                                                <div className=\"card-panel red accent-1\">\n                                                    {form.tags.error}\n                                                </div>}\n                                        </div>\n                                        {/* Field isPublic*/}\n                                        <div className=\"form-group\">\n                                            <label>\n                                                <input checked={type} onChange={e => checkPublic(e)} type=\"checkbox\" />\n                                                <span>Is Public</span>\n                                            </label>\n                                        </div>\n                                        {/* Field avatar */}\n                                        <div className=\"form-group\">\n                                            <div className=\"file-field input-field\">\n                                                <div className=\"btn\">\n                                                    <span>picture</span>\n                                                    <input type=\"file\" value={form.avatar.path} onChange={e => handleUploadChange(e)} />\n                                                </div>\n\n                                                <div className=\"file-path-wrapper\">\n                                                    <input id=\"avatar\" type=\"text\" name=\"avatar\" className=\"form-control file-path validate\" ></input>\n                                                </div>\n                                            </div>\n                                            {/* error */}\n                                            {form.avatar.error &&\n                                                <div className=\"card-panel red accent-1\">\n                                                    {form.avatar.error}\n                                                </div>}\n                                        </div>\n                                    </div>\n                                    <div className=\"card-action center\">\n                                        {/* Submit button */}\n                                        <button type=\"submit\" className=\"btn\">Valider</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form >\n            ) : (\n                    <div></div>\n                )}\n        </div>)\n};\n\nexport default ArticleEdit;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport BlogList from \"./pages/blog-list\";\nimport PageNotFound from './pages/page-not-found';\nimport ArticleDetail from \"./pages/article-detail\";\nimport Login from \"./pages/login\";\nimport { get, remove } from \"local-storage\";\nimport AuthenticationService from './services/authentication-services';\nimport PrivateRoute from './PrivateRoute';\nimport Register from './pages/register';\nimport ArticleAdd from './pages/article-add';\nimport ArticleEdit from './pages/article-edit';\n\n\ntype User = {\n  token: string;\n  pseudo: string;\n  email: string;\n  avatarPath: string;\n}\n\n\nconst App: React.FC = () => {\n\n\n\n  const [User, setUser] = useState<User>();\n  const logout = () => {\n    remove('user');\n    AuthenticationService.isAuthenticated = false;\n    setUser(undefined);\n  }\n  useEffect(() => {\n    const user: User = get('user') || '';\n    if (user) \n      AuthenticationService.isAuthenticated = true;\n    console.log(AuthenticationService.isAuthenticated);\n    setUser(user);\n  }, []);\n\n\n\n  return (\n    <Router>\n      <div>\n        {}\n        <nav>\n          <div className=\"nav-wrapper  indigo accent-1\">\n            <Link to=\"/\" className=\"brand-logo center\">Blog</Link>\n            <ul className=\"right\">\n\n              {User ? (\n                <div className=\"right\">\n                  <li>\n                    <div className=\"chip\">\n                    <img className=\"imgAvatar\" alt=\"avatar\" src={'http://localhost:3000/' + User.avatarPath} />\n                    {User.pseudo}\n                    </div>\n                </li>\n                </div>\n                  ) : (\n                  <li>\n                    <Link to=\"/login\">Login</Link>\n                  </li>\n                  )}\n  \n              <li>\n                    {User &&\n                      <Link onClick={() => logout()} to=\"/\" className=\"Right btn waves-effect waves-light #ff8a80 red accent-1\">LogOut</Link>\n                    }\n                  </li>\n            </ul>\n          </div>\n        </nav>\n            {}\n            <Switch>\n              <Route exact path=\"/\" component={BlogList} />\n              <Route exact path=\"/blog\" component={BlogList} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <PrivateRoute exact path=\"/articles/add\" component={ArticleAdd} />\n              <PrivateRoute exact path=\"/articles/:id\" component={ArticleDetail} />\n              <PrivateRoute exact path=\"/articles/edit/:id\" component={ArticleEdit} />\n              <Route exact path=\"/pageNotF\" component={PageNotFound} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n    </Router>\n        )\n      }\n      \n      export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}